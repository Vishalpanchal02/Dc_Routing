// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Dc_Routing.Data.EFModels;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Dc_Routing.Data.EFModels
{
    public partial interface IHRMS2ContextProcedures
    {
        Task<List<GetApplicantsWithPaginationAndSearchResult>> GetApplicantsWithPaginationAndSearchAsync(string searchText, int? pageNumber, int? pageSize, OutputParameter<int?> totalCount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeDetailsResult>> GetEmployeeDetailsAsync(int? pageNumber, int? pageSize, string searchTerm, OutputParameter<int?> totalEmployees, OutputParameter<int?> currentPageNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeDetails_NewResult>> GetEmployeeDetails_NewAsync(int? pageNumber, int? pageSize, string searchTerm, OutputParameter<int?> totalEmployees, OutputParameter<int?> currentPageNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeDetailsforexcelResult>> GetEmployeeDetailsforexcelAsync(bool? isActive, bool? allEmployee, int? companyId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeDetailsforexcel_IshuResult>> GetEmployeeDetailsforexcel_IshuAsync(bool? isActive, bool? allEmployee, int? companyId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeDetailsforexcelWITHOUTFILTERResult>> GetEmployeeDetailsforexcelWITHOUTFILTERAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<prc_Daily_AttendanceResult>> prc_Daily_AttendanceAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<prc_Daily_Attendance_reportResult>> prc_Daily_Attendance_reportAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<prc_Pivot_Monthly_Attendance_reportResult>> prc_Pivot_Monthly_Attendance_reportAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<prc_User_Machine_detailsResult>> prc_User_Machine_detailsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SearchEmployeeDetailsResult>> SearchEmployeeDetailsAsync(string searchTerm, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> shrink_dbAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_InsertCandidate_1Result>> sp_InsertCandidate_1Async(string tITLE, string fULL_NAME, string fATHER_NAME, string mOTHER_NAME, string dESIGNATION, DateOnly? dOB, string gENDER, string pAN_NO, string aADHAR_NO, string nAME_ON_ADHAR, string pLACE_OF_BIRTH, string pRESENT_ADDRESS, string pRESENT_ADDRESS_PIN_CODE, string pERMANENT_ADDRESS, string mARITIAL_STATUS, string mOBILE, string eMAIL_ADDRESS, string nATIONALITY, string rELIGION, string bANK_NAME, string aC_NO, string bANK_IFSC_CODE, string rEFERENCE1, string cONTACT1, string rEFERENCE2, string cONTACT2, string rEFERENCE3, string cONTACT3, string rEFERENCE4, string cONTACT4, string rEFERENCE5, string cONTACT5, string fAMILY_MEMBER_Name, string fAMILY_MEMBER_Relation, DateOnly? fAMILY_MEMBER_DOB, string cOMPANY1, string cOMPANY2, string cOMPANY3, string wORK_LOCATION, string pOSITION_HELD_IN_PREVIOUS_COMPANY, DateOnly? from, DateOnly? to, string in_Hand_Salary, string lAST_CTC, string hIGHEST_QUALIFICATION, bool? isSalarySlipUploaded, bool? isBankStatementUploaded, bool? isPrevOfferLetterUploaded, bool? isPassportPhotoUploaded, bool? isPanAttachmentUploaded, bool? isAadharAttachmentUploaded, bool? isBankPassbookAttachmentUpoaded, bool? isEducationAttachmentUploaded, string createdBy, OutputParameter<long?> id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_InsertCandidateDocsAsync(long? cId, string filePath, string fileType, string fileSize, string createdBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_InsertEmpAttendanceAsync(string empCode, DateOnly? attendanceDate, TimeOnly? punchIn, TimeOnly? punchOut, string createdBy, DateTime? createdOn, string lastUpdatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_InsertEmployeeDocsAsync(long? employeeId, string filePath, string fileType, string fileSize, string createdBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_InsertInsuranceEnrollmentAsync(string nameofInsured, string employeeId, string relation, string gender, DateOnly? dateOfBirth, DateOnly? dateOfJoin, decimal? grossSalary, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_SearchCandidatesResult>> sp_SearchCandidatesAsync(DateTime? startDate, DateTime? endDate, DataTable locationIds, DataTable designationIds, DataTable departmentIds, DataTable statusIds, DataTable hrApprovalStatuses, DataTable auditApprovalStatuses, DataTable clusterManagerApprovalStatuses, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_TruncateReferencedTableResult>> sp_TruncateReferencedTableAsync(string tableName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> usp_InsertEmployeeAfterInitiateAsync(long? candidateId, string firstName, string middleName, string lastName, string eMAIL_ADDRESS, string mOBILE, int? departmentId, int? designationId, int? locationId, DateTime? dOJ, string passwordHash, string updatedBy, string tITLE, string fATHER_S_NAME, string mOTHER_S_NAME, DateOnly? dOB, string gENDER, decimal? gROSS_SALARY, string uAN_NO, string pAN_NO, string aADHAR_NO, string nAME_ON_ADHAR, string pLACE_OF_BIRTH, string pRESENT_ADDRESS, string pRESENT_ADDRESS_PIN_CODE, string pERMANENT_ADDRESS, string pERMANENT_ADDRESS_PIN_CODE, string aPPLICANT_CODE, string wEEKLY_OFF, string mARITIAL_STATUS, bool? iSRELATIVEINCOMPANY, string nATIONALITY, string rELIGION, string bANK_NAME, string a_C_NO, string bANK_IFSC_CODE, string rEFERENCE1__OF_LAST_3_COMPANY, string cONTACT1_OF_LAST_3_COMPANY, string rEFERENCE2__OF_LAST_3_COMPANY1, string cONTACT2_OF_LAST_3_COMPANY1, string rEFERENCE3__OF_LAST_3_COMPANY11, string cONTACT3_OF_LAST_3_COMPANY11, string rEFERENCE4__OF_LAST_3_COMPANY11, string cONTACT4_OF_LAST_3_COMPANY11, string rEFERENCE5__OF_LAST_3_COMPANY111, string cONTACT5_OF_LAST_3_COMPANY111, string hIGHEST_QUALIFICATION, string bENEFICIARY_ADDRESS, string rEFERENCE, DateTime? createdOn, string createdBy, bool? isActive, bool? isDeleted, bool? isSalarySlipUploaded, bool? isBankStatementUploaded, bool? isPrevOfferLetterUploaded, bool? isPassportPhotoUploaded, bool? isPanAttachmentUploaded, bool? isAadharAttachmentUploaded, bool? isBankPassbookAttachmentUpoaded, bool? isEducationAttachmentUploaded, int? statusId, string applicantId, decimal? basicSalary, decimal? hRA, decimal? cCA, decimal? specialAllowance, decimal? dA, decimal? extraAllowance, decimal? monthlyGrossCTC, decimal? annuallyNetCTC, bool? isResumeUploaded, decimal? totalExperience, decimal? salaryExpectation, string additionalInfoApplicant, bool? agreement, bool? isApplicant, bool? isApplicantApproved, bool? pFApplicable, bool? bonusApplicable, bool? eSICApplicable, int? companyId, OutputParameter<string> newEcode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> usp_InsertEmployeeAfterInitiateNewAsync(long? candidateId, string firstName, string middleName, string lastName, string eMAIL_ADDRESS, string mOBILE, int? departmentId, int? designationId, int? locationId, DateTime? dOJ, string passwordHash, string updatedBy, string tITLE, string fATHER_S_NAME, string mOTHER_S_NAME, DateOnly? dOB, string gENDER, decimal? gROSS_SALARY, string uAN_NO, string pAN_NO, string aADHAR_NO, string nAME_ON_ADHAR, string pLACE_OF_BIRTH, string pRESENT_ADDRESS, string pRESENT_ADDRESS_PIN_CODE, string pERMANENT_ADDRESS, string pERMANENT_ADDRESS_PIN_CODE, string aPPLICANT_CODE, string wEEKLY_OFF, string mARITIAL_STATUS, bool? iSRELATIVEINCOMPANY, string nATIONALITY, string rELIGION, string bANK_NAME, string a_C_NO, string bANK_IFSC_CODE, string rEFERENCE1__OF_LAST_3_COMPANY, string cONTACT1_OF_LAST_3_COMPANY, string rEFERENCE2__OF_LAST_3_COMPANY1, string cONTACT2_OF_LAST_3_COMPANY1, string rEFERENCE3__OF_LAST_3_COMPANY11, string cONTACT3_OF_LAST_3_COMPANY11, string rEFERENCE4__OF_LAST_3_COMPANY11, string cONTACT4_OF_LAST_3_COMPANY11, string rEFERENCE5__OF_LAST_3_COMPANY111, string cONTACT5_OF_LAST_3_COMPANY111, string hIGHEST_QUALIFICATION, string bENEFICIARY_ADDRESS, string rEFERENCE, DateTime? createdOn, string createdBy, bool? isActive, bool? isDeleted, bool? isSalarySlipUploaded, bool? isBankStatementUploaded, bool? isPrevOfferLetterUploaded, bool? isPassportPhotoUploaded, bool? isPanAttachmentUploaded, bool? isAadharAttachmentUploaded, bool? isBankPassbookAttachmentUpoaded, bool? isEducationAttachmentUploaded, int? statusId, string applicantId, decimal? basicSalary, decimal? hRA, decimal? cCA, decimal? specialAllowance, decimal? dA, decimal? extraAllowance, decimal? monthlyGrossCTC, decimal? annuallyNetCTC, bool? isResumeUploaded, decimal? totalExperience, decimal? salaryExpectation, string additionalInfoApplicant, bool? agreement, bool? isApplicant, bool? isApplicantApproved, bool? pFApplicable, bool? bonusApplicable, bool? eSICApplicable, int? companyId, string eSICNO, string maritalStatus, string husbandName, OutputParameter<string> newEcode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_ProcessBulkEmployeeDataResult>> usp_ProcessBulkEmployeeDataAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_ProcessBulkEmployeeDataNewResult>> usp_ProcessBulkEmployeeDataNewAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_ProcessBulkEmployeeDataNewsResult>> usp_ProcessBulkEmployeeDataNewsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_ProcessBulkEmployeeDataNewWResult>> usp_ProcessBulkEmployeeDataNewWAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_ProcessBulkEmployeeDataNewWsResult>> usp_ProcessBulkEmployeeDataNewWsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<view_attendance_dataResult>> view_attendance_dataAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
