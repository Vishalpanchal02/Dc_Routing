// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using System;
using System.Data;
using System.Linq;
using System.Threading.Tasks;
using Dc_Routing.Data.EFModels;

namespace Dc_Routing.Data.EFModels
{
    public partial class HRMS2Context
    {

        [DbFunction("fn_GetDailyPunchStatus", "dbo")]
        public IQueryable<fn_GetDailyPunchStatusResult> fn_GetDailyPunchStatus(string ReportHeadEcode, DateOnly? TargetDate)
        {
            return FromExpression(() => fn_GetDailyPunchStatus(ReportHeadEcode, TargetDate));
        }

        [DbFunction("fn_GetDailyPunchStatus_Demo", "dbo")]
        public IQueryable<fn_GetDailyPunchStatus_DemoResult> fn_GetDailyPunchStatus_Demo(string ReportHeadEcode, DateOnly? TargetDate)
        {
            return FromExpression(() => fn_GetDailyPunchStatus_Demo(ReportHeadEcode, TargetDate));
        }

        [DbFunction("fn_GetDailyPunchStatus_new", "dbo")]
        public IQueryable<fn_GetDailyPunchStatus_newResult> fn_GetDailyPunchStatus_new(string ReportHeadEcode, DateOnly? TargetDate)
        {
            return FromExpression(() => fn_GetDailyPunchStatus_new(ReportHeadEcode, TargetDate));
        }

        [DbFunction("fn_GetMonthlyAttendance", "dbo")]
        public IQueryable<fn_GetMonthlyAttendanceResult> fn_GetMonthlyAttendance(int? Month, int? Year, string ECode)
        {
            return FromExpression(() => fn_GetMonthlyAttendance(Month, Year, ECode));
        }

        [DbFunction("fn_GetMonthlyAttendance_NEW", "dbo")]
        public IQueryable<fn_GetMonthlyAttendance_NEWResult> fn_GetMonthlyAttendance_NEW(int? Month, int? Year, string ECode)
        {
            return FromExpression(() => fn_GetMonthlyAttendance_NEW(Month, Year, ECode));
        }

        [DbFunction("fn_GetMonthlyPunches", "dbo")]
        public IQueryable<fn_GetMonthlyPunchesResult> fn_GetMonthlyPunches(int? Month, int? Year, string ECode)
        {
            return FromExpression(() => fn_GetMonthlyPunches(Month, Year, ECode));
        }

        [DbFunction("fn_GetMonthlyPunchesRange", "dbo")]
        public IQueryable<fn_GetMonthlyPunchesRangeResult> fn_GetMonthlyPunchesRange(DateOnly? FromDate, DateOnly? ToDate, string ECode)
        {
            return FromExpression(() => fn_GetMonthlyPunchesRange(FromDate, ToDate, ECode));
        }

        [DbFunction("fn_GetMonthlyPunchesRange_new", "dbo")]
        public IQueryable<fn_GetMonthlyPunchesRange_newResult> fn_GetMonthlyPunchesRange_new(DateOnly? FromDate, DateOnly? ToDate, string ECode)
        {
            return FromExpression(() => fn_GetMonthlyPunchesRange_new(FromDate, ToDate, ECode));
        }

        [DbFunction("fn_GetMonthlyPunchesRange_nik1", "dbo")]
        public IQueryable<fn_GetMonthlyPunchesRange_nik1Result> fn_GetMonthlyPunchesRange_nik1(DateOnly? FromDate, DateOnly? ToDate, string ECode)
        {
            return FromExpression(() => fn_GetMonthlyPunchesRange_nik1(FromDate, ToDate, ECode));
        }

        [DbFunction("fn_GetMonthlyPunchesRange_production", "dbo")]
        public IQueryable<fn_GetMonthlyPunchesRange_productionResult> fn_GetMonthlyPunchesRange_production(DateOnly? FromDate, DateOnly? ToDate, string ECode)
        {
            return FromExpression(() => fn_GetMonthlyPunchesRange_production(FromDate, ToDate, ECode));
        }

        [DbFunction("fn_GetMonthlyPunchesRange_productionnew", "dbo")]
        public IQueryable<fn_GetMonthlyPunchesRange_productionnewResult> fn_GetMonthlyPunchesRange_productionnew(DateOnly? FromDate, DateOnly? ToDate, string ECode)
        {
            return FromExpression(() => fn_GetMonthlyPunchesRange_productionnew(FromDate, ToDate, ECode));
        }

        [DbFunction("fn_GetMonthlyPunchesRange_productionnewnick", "dbo")]
        public IQueryable<fn_GetMonthlyPunchesRange_productionnewnickResult> fn_GetMonthlyPunchesRange_productionnewnick(DateOnly? FromDate, DateOnly? ToDate, string ECode)
        {
            return FromExpression(() => fn_GetMonthlyPunchesRange_productionnewnick(FromDate, ToDate, ECode));
        }

        protected void OnModelCreatingGeneratedFunctions(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<fn_GetDailyPunchStatusResult>().HasNoKey();
            modelBuilder.Entity<fn_GetDailyPunchStatus_DemoResult>().HasNoKey();
            modelBuilder.Entity<fn_GetDailyPunchStatus_newResult>().HasNoKey();
            modelBuilder.Entity<fn_GetMonthlyAttendanceResult>().HasNoKey();
            modelBuilder.Entity<fn_GetMonthlyAttendance_NEWResult>().HasNoKey();
            modelBuilder.Entity<fn_GetMonthlyPunchesResult>().HasNoKey();
            modelBuilder.Entity<fn_GetMonthlyPunchesRangeResult>().HasNoKey();
            modelBuilder.Entity<fn_GetMonthlyPunchesRange_newResult>().HasNoKey();
            modelBuilder.Entity<fn_GetMonthlyPunchesRange_nik1Result>().HasNoKey();
            modelBuilder.Entity<fn_GetMonthlyPunchesRange_productionResult>().HasNoKey();
            modelBuilder.Entity<fn_GetMonthlyPunchesRange_productionnewResult>().HasNoKey();
            modelBuilder.Entity<fn_GetMonthlyPunchesRange_productionnewnickResult>().HasNoKey();
        }
    }
}
